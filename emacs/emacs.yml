# Install emacs from source using ansible
#
# Usage: ansible-playbook emacs.yml


# The MIT License (MIT)
#
# Copyright (c) 2015 George M Jones
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

---
- hosts: localhost
  connection: local
  user: xhyang
  become: yes
  vars:
    secondsPerMinute: 60
    secondsPerHour: 3600
    secondsPerDay: 86400
    secondsPerWeek: 604800

  tasks:
  - name: Install requied packages for which order does not matter
    apt: pkg={{ item }} state=present update_cache=yes install_recommends=no cache_valid_time=604800
    become: root
    with_items:
      - autoconf
      - automake
      - imagemagick
      - libasound2-dev
      - libdbus-1-dev
      - libgconf2-dev
      - libgif-dev
      - libgpm-dev
      - libjpeg-dev
      - libxpm-dev
      - liblockfile-dev
      - libm17n-dev
      - libmagick++-dev
      - libncurses5-dev
      - libotf-dev
      - libpng-dev
      - librsvg2-dev
      - libselinux1-dev
      - libtiff5-dev
      - libxaw7-dev
      - libxml2-dev
      - libxaw7-dev
      - sharutils
      - texinfo
      - xaw3dg-dev
      - libgnutls-dev
      # For xwidgets
      - libgtk-3-dev
      - libwebkitgtk-3.0-dev
      # To integrate terminal emacs with system clipboard
      - xsel
      - git
    tags:
      - setup

  - name: Setup | set postfix selections wtihout prompting
    shell: echo postfix postfix/mailname string `hostname` | debconf-set-selections
    register: firstSelection
    tags:
      - setup

  - name: Setup | second selection
    when: firstSelection is success
    shell: echo postfix postfix/main_mailer_type string 'No configuration' | debconf-set-selections
    register: secondSelection
    tags:
      - setup

  - name: Setup | install postfix
    when: secondSelection is success
    apt: pkg={{ item }} state=present update_cache=yes install_recommends=no cache_valid_time=604800
    with_items:
      - postfix
    become: root
    register: postfixInstalled
    tags:
      - setup

# Pull emacs sources, but no more often than once a week

  - stat: path=~/src/emacs/
    register: pulled
    become: no
    tags:
      - pull

  - name: use file module to create a timestamp file for "now"
    file: path="~/ansible.now" state=touch
    tags:
      - pull

  - stat: path=~/ansible.now
    register: now
    tags:
      - pull

  - name: Setup | pull latest emacs sources
    when: ((not pulled.stat.exists) or
           (pulled.stat.exists and pulled.stat.mtime  + secondsPerWeek < now.stat.mtime))
    git: repo=https://github.com/emacs-mirror/emacs.git accept_hostkey=true dest=~/src/emacs
    register: src
    become: no
    tags:
      - pull

  - name: Setup | remember when we last pulled emacs sources
    file: path=~/src/emacs/  state=touch
    when: src is success and (not src is skipped)
    become: no
    tags:
      - pull


# build from source just pulled.  These take a while

  - name: Setup | autogen
    when: src is success
    command: ./autogen.sh chdir=~/src/emacs
    register: autogen
    become: no
    tags:
      - build

  - name: Setup | configure
    when: autogen is success
    command: ./configure --enable-link-time-optimization --without-pop --without-kerberos --without-kerberos5 --without-hesiod --with-sound=alsa --with-x-toolkit=gtk3 --with-xpm --with-jpeg --with-tiff --with-gif --with-png --with-rsvg  --with-xml2 --with-imagemagick --with-xft --without-libotf --with-xim --with-xaw3d --with-dbus --without-gconf --without-gsettings --without-selinux --with-gnutls --with-zlib --with-modules --with-file-notification=inotify --without-makeinfo --with-x --exec-prefix=/usr/ chdir=~/src/emacs
    register: configure
    become: no
    tags:
      - build

  - name: Setup | bootstrap
    when: configure is success
    command: make bootstrap chdir=~/src/emacs
    register: bootstrap
    become: no
    tags:
      - build

# install

  - name: Setup | install
    when: bootstrap is not defined or bootstrap is success
    command: make install chdir=~/src/emacs
    become: root
    tags:
      - install
